# # .github/workflows/ci-cd.yml

# name: CI/CD for Production

# on:
#   repository_dispatch:
#     types: [update-submodule]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     # permissions:
#     #   contents: write  # GITHUB_TOKEN에 콘텐츠 쓰기 권한 부여
#     #   id-token: write  # 필요한 경우 추가 권한 부여

#     steps:
#       - name: checkout repository
#         uses: actions/checkout@v3
#         with:
#           submodules: true
#           fetch-depth: 0

#       - name: print repository_dispatch event info
#         run: 'echo "Submodule: ${{ github.event.client_payload.submodule }}"'

#       - name: deploy to EC2
#         uses: appleboy/ssh-action@v0.1.4
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             cd /dev/final-project-production
#             git pull origin main
#             git submodule update --remote ${{ github.event.client_payload.submodule }}
#             # add build and restart command if needed

on: # 이럴때 실행 해달라
  # Triggers the workflow on push or pull request events but only for the main branch
  push: # push를 할때 
    branches: #어떤것이?
      - setting/action #main이
   # main의 정보에 push될때마다 실행을 해달라

# 실행
# jobs:
#   SSH:
#     runs-on: ubuntu-latest # 우분투 최신버전으로 컴퓨터를 준비하라 ()

#     steps:
#       - uses: actions/checkout@v3 # 레파지토리 참고하라
#       - name: ssh to ec2 # ec2에 접속하라.
#         uses: appleboy/ssh-action@master # 접속 제공 코드
#         with:
#           key: ${{ secrets.SSH_PRIVATE_KEY }} # 키페어 필요
#           host: ${{ secrets.EC2_HOST }} # ip
#           username: ${{ secrets.EC2_USER }} # 해당 유저 접속 
#           script: | # 실행 할 코드
#             cd dev/  #경로 이동 (실제 존재하는 경로로 이동해야한다.)
#             touch hello.txt

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          password: ${{ secrets.SSH_PRIVATE_KEY }}
        #   port: ${{ secrets.PORT }}
          script: |
            cd dev/
            touch hello.txt